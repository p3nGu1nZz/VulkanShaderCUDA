#version 450

layout(local_size_x = 16, local_size_y = 16) in;

layout(binding = 0) buffer InputA {
    float data[];
} inputA;

layout(binding = 1) buffer InputB {
    float data[];
} inputB;

layout(binding = 2) buffer OutputC {
    float data[];
} outputC;

layout(push_constant) uniform PushConstants {
    uint widthA;
    uint heightA;
    uint widthB;
} constants;

void main() {
    uint row = gl_GlobalInvocationID.y;
    uint col = gl_GlobalInvocationID.x;

    if (row < constants.heightA && col < constants.widthB) {
        float sum = 0.0;
        for (uint k = 0; k < constants.widthA; ++k) {
            sum += inputA.data[row * constants.widthA + k] * inputB.data[k * constants.widthB + col];
        }
        outputC.data[row * constants.widthB + col] = sum;
    }
}
